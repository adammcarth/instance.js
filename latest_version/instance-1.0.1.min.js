/*!
  instance.js v1.0.1: A lightweight javascript library to model data on the client side
  before sending it off to the server.
  Created by @adammcarth under the MIT license
*/
function ensureArray(a){var b=[];return"string"==typeof a?b.concat(a):a}var Instance=function(a){this.attributes={},a.defaults&&(this.defaults=a.defaults,this.attributes=Object.create(this.defaults)),this.name=a.name,this.url=a.url,this.method=a.method,this.headers=a.headers,this.success=a.success,this.error=a.error,this.fields=[],this.elements=[],this.removeQueue=[]};Array.prototype.removeByValue=function(a){for(var b=0;b<this.length;b++)if(this[b]==a){this.splice(b,1);break}},Instance.prototype.add=function(a){Object.keys(a).forEach(function(b){this.attributes[b]=a[b]},this)},Instance.prototype.addField=function(a){a=ensureArray(a),this.fields=this.fields.concat(a)},Instance.prototype.addElement=function(a){a=ensureArray(a),this.elements=this.elements.concat(a)},Instance.prototype.get=function(a){var b,c;return this.fields.forEach(function(a){b=document.getElementsByName(a)[0],this.attributes[a]=void 0===b||""===b.value?void 0:b.value},this),this.elements.forEach(function(a){c=document.getElementById(a),this.attributes[a]=null===c||""===c.innerHTML?void 0:c.innerHTML},this),this.removeQueue.forEach(function(a){delete this.attributes[a],this.fields.removeByValue(a),this.elements.removeByValue(a)},this),this.removeQueue=[],a?this.attributes[a]:this.attributes},Instance.prototype.remove=function(a){a=ensureArray(a),this.removeQueue=this.removeQueue.concat(a)},Instance.prototype.reset=function(){this.attributes={},this.defaults&&(this.attributes=this.defaults)},Instance.prototype.clear=function(){this.attributes={}},Instance.prototype.send=function(a,b){var c=this,d=new XMLHttpRequest,e="",f="",g=(this.get(),this.headers);d.onreadystatechange=function(){4===d.readyState&&(200===d.status?c.success(this.responseText):c.error(d.status,this.responseText))},b=b||this.method||"POST",b=b.toUpperCase(),a=a||this.url||"./",Object.keys(this.get()).forEach(function(a){e+="&",f=void 0===this.get(a)?"":encodeURIComponent(this.get(a)),e+=this.name?this.name+"["+a+"]="+f:a+"="+f},this),"GET"===b&&(a=a+"?"+e),d.open(b,a,!0),d.setRequestHeader("Content-type","application/x-www-form-urlencoded"),g&&Object.keys(g).forEach(function(a){d.setRequestHeader(a,g[a])}),d.send(e)};